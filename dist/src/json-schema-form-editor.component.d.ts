import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';
import { FrameworkEditorLibraryService } from './framework-library/framework-editor-library.service';
import { WidgetEditorLibraryService } from './widget-editor-library/widget-editor-library.service';
import { JsonSchemaFormService } from './json-schema-form.service';
export declare class JsonSchemaFormEditorComponent implements ControlValueAccessor, OnChanges, OnInit {
    private changeDetector;
    private frameworkLibrary;
    private widgetEditorLibrary;
    jsf: JsonSchemaFormService;
    private sanitizer;
    debugOutput: any;
    formValueSubscription: any;
    formInitialized: boolean;
    objectWrap: boolean;
    formValuesInput: string;
    previousInputs: {
        schema: any;
        layout: any[];
        data: any;
        options: any;
        framework: any | string;
        widgets: any;
        form: any;
        model: any;
        JSONSchema: any;
        UISchema: any;
        formData: any;
        loadExternalAssets: boolean;
        debug: boolean;
    };
    schema: any;
    layout: any[];
    data: any;
    options: any;
    framework: any | string;
    widgets: any;
    form: any;
    model: any;
    JSONSchema: any;
    UISchema: any;
    formData: any;
    ngModel: any;
    language: string;
    loadExternalAssets: boolean;
    debug: boolean;
    value: any;
    onChanges: EventEmitter<any>;
    onSubmit: EventEmitter<any>;
    isValid: EventEmitter<boolean>;
    validationErrors: EventEmitter<any>;
    formSchema: EventEmitter<any>;
    formLayout: EventEmitter<any>;
    dataChange: EventEmitter<any>;
    modelChange: EventEmitter<any>;
    formDataChange: EventEmitter<any>;
    ngModelChange: EventEmitter<any>;
    onChange: Function;
    onTouched: Function;
    constructor(changeDetector: ChangeDetectorRef, frameworkLibrary: FrameworkEditorLibraryService, widgetEditorLibrary: WidgetEditorLibraryService, jsf: JsonSchemaFormService, sanitizer: DomSanitizer);
    readonly stylesheets: SafeResourceUrl[];
    readonly scripts: SafeResourceUrl[];
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    retSchema($event: any): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(isDisabled: boolean): void;
    updateForm(): void;
    setFormValues(formValues: any, resetFirst?: boolean): void;
    submitForm(): void;
    initializeForm(): void;
    private initializeOptions();
    private initializeSchema();
    private initializeData();
    private initializeLayout();
    private activateForm();
}
